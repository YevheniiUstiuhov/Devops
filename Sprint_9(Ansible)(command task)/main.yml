---
- name: Install and configure MariaDB
  hosts: db
  become: true
  vars:
    db_host: "db_host"
    db_name: "db_name"
    db_user: "db_user"
    db_pass: "db_pass"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MariaDB packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - mariadb-server
        - python3-pymysql

    - name: Start and enable MariaDB service
      systemd:
        name: mariadb
        enabled: yes
        state: started

    - name: Configure MariaDB to listen on all IP addresses
      lineinfile:
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address'
        line: "bind-address = 0.0.0.0"

    - name: Create a database
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Allow remote access for db_user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_pass }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        priv: "{{ db_name }}.*:ALL"
        host: "%"
        state: present

    - name: Restart MariaDB
      service:
        name: mariadb
        state: restarted

##################################################################################################################

- name: Install and configure Apache webserver
  hosts: server
  become: true
  become_user: root

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apache2
        - acl
        - php
        - php-cli
        - php-mysql
        - php-xml
        - libapache2-mod-php
        - php-curl
        - curl
        - composer

    - name: Add Node.js repository
      shell: curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
      args:
        executable: /bin/bash

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
      ignore_errors: yes

    - name: Ð¡lone the App repository
      ansible.builtin.git:
        repo: https://github.com/Practical-DevOps/app-for-devops.git
        dest: /var/www/application

    - name: Start and enable Apache service
      systemd:
        name: apache2
        enabled: yes
        state: started

##################################################################################################################

- name: Build Lavarel application
  hosts: server
  become: true
  become_user: root
  vars:
    db_host: "db_host"
    db_name: "db_name"
    db_user: "db_user"
    db_pass: "db_pass"
    my_ip: ""

  tasks:

    - name: Install Composer dependencies
      command: composer install
      environment:
        COMPOSER_ALLOW_SUPERUSER: 1
      args:
        chdir: /var/www/application

    - name: Configure the application .env file
      command: mv /var/www/application/.env.example /var/www/application/.env
      args:
        chdir: /var/www/application

    - name: Update .env DB_HOST
      lineinfile:
        path: /var/www/application/.env
        regexp: '^DB_HOST='
        line: 'DB_HOST={{ db_host }}'

    - name: Update .env DB_DATABASE
      lineinfile:
        path: /var/www/application/.env
        regexp: '^DB_DATABASE='
        line: 'DB_DATABASE={{ db_name }}'

    - name: Update .env DB_USERNAME
      lineinfile:
        path: /var/www/application/.env
        regexp: '^DB_USERNAME='
        line: 'DB_USERNAME={{ db_user }}'

    - name: Update .env DB_PASSWORD
      lineinfile:
        path: /var/www/application/.env
        regexp: '^DB_PASSWORD='
        line: 'DB_PASSWORD={{ db_pass }}'

    - name: Generate application key
      command: php artisan key:generate
      args:
        chdir: /var/www/application

    - name: Run database migrations
      command: php artisan migrate
      args:
        chdir: /var/www/application

    - name: Install frontend dependencies
      command: npm install
      args:
        chdir: /var/www/application

    - name: Build frontend assets
      command: npm run build
      args:
        chdir: /var/www/application

    - name: Change ownership of the directory
      ansible.builtin.shell: |
        chown -R www-data:www-data /var/www
      args:
        executable: /bin/bash

#    - name: Set directory permissions
#      ansible.builtin.shell: |
#        sudo chmod -R 777 /var/www/application/storage
#      args:
#        executable: /bin/bash

    - name: Get your IP address
      shell: dig +short myip.opendns.com @resolver1.opendns.com
      register: my_ip

    - name: Create virtual host file
      copy:
        content: |
          <VirtualHost *:80>
              ServerName {{ my_ip.stdout }}
              ServerAlias myapp
              DocumentRoot /var/www/application/public

              <Directory /var/www/application/public>
                  AllowOverride All
              </Directory>
          </VirtualHost>
        dest: /etc/apache2/sites-available/application.conf

    - name: Enable the virtual host
      command: a2ensite application.conf

    - name: Disable default virtual host
      command: a2dissite 000-default
      notify:
        - Reload Apache

    - name: Enable Apache Rewrite Module
      ansible.builtin.command: a2enmod rewrite
      notify:
        - Reload Apache
  handlers:
    - name: Reload Apache
      systemd:
        name: apache2
        state: restarted
